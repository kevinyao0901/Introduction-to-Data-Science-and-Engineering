#1）如果n=2001，则所求的正整数列为[3,3,3,...]，总计2001/3=667个3。

#具体思路：

#通过手写几个数查看一下规律：4=2+2，5=2+3，6=3+3，7=3+2+2，8=3+3+2，9=3+3+3。

#发现规律如下：

#（1）元素不会超过4，因为4=2+2，又可以转化为2的问题，而5=2+3，5<2*3，所以5总能分解成2和3。

#（2）尽可能多分解出3，然后分解出2，不要分出1。

#考虑任意一个数，除以3之后的结果有以下3种：

#（1）能被3除断，那么就分解为3+3+...+3的情况即可。例如9=3+3+3。

#（2）被3除余1，分解为3+3+...+3+2+2或者3+3+...+3+4的情况，例如10=3+3+2+2

#（3）被3除余2，分解为3+3+...+3+2的情况，例如11=3+3+3+2。

import math

while True:
    num = int(input())
    if num % 3 == 0:
        print(int(math.pow(3, num / 3)))
        continue
    flag = []
    i = 0
    while num != 2 and num != 4:
        flag.append(3)
        num -= 3
        i += 1
    while num:
        flag.append(2)
        num -= 2
        i += 1
    result = 1
    print(flag)
    for j in range(i):
        result *= flag[j]
    print("Max prouct is:",end="")
    print(result)

